"""add_memory_system_tables

Revision ID: 622e964db082
Revises: 
Create Date: 2025-08-14 13:37:03.159819

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '622e964db082'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('memory_objects',
    sa.Column('memory_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('goal_id', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('episodic', 'semantic', 'procedural', name='memorytype'), nullable=False),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('memory_metadata', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('memory_id')
    )
    op.create_table('memory_associations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_memory_id', sa.UUID(), nullable=False),
    sa.Column('target_memory_id', sa.UUID(), nullable=False),
    sa.Column('association_type', sa.String(length=50), nullable=False),
    sa.Column('strength', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_memory_id'], ['memory_objects.memory_id'], ),
    sa.ForeignKeyConstraint(['target_memory_id'], ['memory_objects.memory_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_memory_associations_id'), 'memory_associations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_memory_associations_id'), table_name='memory_associations')
    op.drop_table('memory_associations')
    op.drop_table('memory_objects')
    # ### end Alembic commands ###
