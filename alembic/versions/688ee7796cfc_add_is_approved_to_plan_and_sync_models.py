"""Add is_approved to Plan and sync models

Revision ID: 688ee7796cfc
Revises: 
Create Date: 2025-07-17 17:36:39.462751

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '688ee7796cfc'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('habit_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('goal_recurrence_count', sa.Integer(), nullable=True),
    sa.Column('goal_frequency_per_cycle', sa.Integer(), nullable=False),
    sa.Column('recurrence_cycle', sa.String(), nullable=False),
    sa.Column('default_estimated_time_per_cycle', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['goals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('project_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['goals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('feedback_text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_id'), 'feedback', ['id'], unique=False)
    op.create_table('goal_occurrences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cycle_id', sa.Integer(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('estimated_effort', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['cycle_id'], ['habit_cycles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_goal_occurrences_id'), 'goal_occurrences', ['id'], unique=False)
    op.add_column('goals', sa.Column('user_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'goals', 'users', ['user_id'], ['id'])
    op.drop_column('goals', 'goal_recurrence_count')
    op.drop_column('goals', 'goal_frequency_per_cycle')
    op.drop_column('goals', 'end_date')
    op.drop_column('goals', 'recurrence_cycle')
    op.add_column('habit_cycles', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('habit_cycles', 'start_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('habit_cycles', 'end_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.create_foreign_key(None, 'habit_cycles', 'users', ['user_id'], ['id'])
    op.add_column('tasks', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('tasks', sa.Column('occurrence_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'tasks', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'tasks', 'goal_occurrences', ['occurrence_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'occurrence_id')
    op.drop_column('tasks', 'user_id')
    op.drop_constraint(None, 'habit_cycles', type_='foreignkey')
    op.alter_column('habit_cycles', 'end_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('habit_cycles', 'start_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_column('habit_cycles', 'user_id')
    op.add_column('goals', sa.Column('recurrence_cycle', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('goals', sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('goals', sa.Column('goal_frequency_per_cycle', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('goals', sa.Column('goal_recurrence_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'goals', type_='foreignkey')
    op.drop_column('goals', 'user_id')
    op.drop_index(op.f('ix_goal_occurrences_id'), table_name='goal_occurrences')
    op.drop_table('goal_occurrences')
    op.drop_index(op.f('ix_feedback_id'), table_name='feedback')
    op.drop_table('feedback')
    op.drop_table('project_goals')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    op.drop_table('habit_goals')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
